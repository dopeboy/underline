[{"/home/manish/work/underline/client/src/App.js":"1","/home/manish/work/underline/client/src/index.js":"2","/home/manish/work/underline/client/src/views/Login.jsx":"3","/home/manish/work/underline/client/src/utils.js":"4","/home/manish/work/underline/client/src/components/Main.jsx":"5","/home/manish/work/underline/client/src/views/Lobby.jsx":"6","/home/manish/work/underline/client/src/views/Active.jsx":"7","/home/manish/work/underline/client/src/views/Completed.jsx":"8"},{"size":2137,"mtime":1613692211432,"results":"9","hashOfConfig":"10"},{"size":542,"mtime":1612329863243,"results":"11","hashOfConfig":"10"},{"size":4283,"mtime":1613518405106,"results":"12","hashOfConfig":"10"},{"size":205,"mtime":1612992090593,"results":"13","hashOfConfig":"10"},{"size":2319,"mtime":1613696994530,"results":"14","hashOfConfig":"10"},{"size":21558,"mtime":1613691993091,"results":"15","hashOfConfig":"10"},{"size":9360,"mtime":1613697148470,"results":"16","hashOfConfig":"10"},{"size":10682,"mtime":1613697295897,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1dp8guc",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},"/home/manish/work/underline/client/src/App.js",["36","37","38"],"/home/manish/work/underline/client/src/index.js",[],"/home/manish/work/underline/client/src/views/Login.jsx",[],"/home/manish/work/underline/client/src/utils.js",[],"/home/manish/work/underline/client/src/components/Main.jsx",["39","40","41","42","43","44","45","46","47","48","49","50","51"],"/home/manish/work/underline/client/src/views/Lobby.jsx",["52","53","54","55","56","57","58","59","60","61","62","63","64","65","66","67","68","69","70","71"],"/home/manish/work/underline/client/src/views/Active.jsx",["72","73","74","75","76","77","78"],"import React, { useState } from 'react'\nimport {\n    Message,\n    Card,\n    Header,\n    Grid,\n    Image,\n    List,\n    Form,\n    Button,\n    Container,\n} from 'semantic-ui-react'\nimport logo from 'images/logo.png'\nimport { Helmet } from 'react-helmet'\nimport { gql, useQuery } from '@apollo/client'\nimport { saveJWT } from 'utils'\nimport { useHistory } from 'react-router-dom'\nimport moment from 'moment-timezone'\nimport './Active.scss'\n\nconst GET_ACTIVE_SLIPS_QUERY = gql`\n    query {\n        activeSlips {\n            id\n            datetimeCreated\n            picks {\n                id\n                underNbaPoints\n                subline {\n                    nbaPointsLine\n                    line {\n                        id\n                        player {\n                            name\n                            headshotUrl\n                        }\n                        game {\n                            homeTeam {\n                                abbreviation\n                                id\n                            }\n                            awayTeam {\n                                abbreviation\n                                id\n                            }\n                            datetime\n                        }\n                    }\n                }\n            }\n        }\n    }\n`\n\nconst Active = () => {\n    const history = useHistory()\n    const { data } = useQuery(GET_ACTIVE_SLIPS_QUERY)\n\n    return (\n        <Form loading={!data} id=\"ul-active\">\n            <Helmet>\n                <title>Active slips</title>\n            </Helmet>\n            {data &&\n                data.activeSlips.map((slip) => {\n                    return (\n                        <div className=\"slip\">\n                            <Header as=\"h3\">\n                                Slip&nbsp;\n                                {moment(slip.datetimeCreated)\n                                    .tz('America/Los_Angeles')\n                                    .format('M/D/YY')}\n                            </Header>\n                            <Card.Group>\n                                {slip.picks.map((pick) => {\n                                    return (\n                                        <Card className=\"slip-card\">\n                                            <Card.Content>\n                                                <Grid columns=\"two\" divided>\n                                                    <Grid.Row>\n                                                        <Grid.Column>\n                                                            <Image\n                                                                src={\n                                                                    pick.subline\n                                                                        .line\n                                                                        .player\n                                                                        .headshotUrl\n                                                                }\n                                                            />\n                                                        </Grid.Column>\n                                                        <Grid.Column>\n                                                            <Header as=\"h4\">\n                                                                {\n                                                                    pick.subline\n                                                                        .line\n                                                                        .player\n                                                                        .name\n                                                                }\n                                                            </Header>\n                                                            <List>\n                                                                <List.Item className=\"lol\">\n                                                                    <List.Icon name=\"hashtag\" />\n                                                                    <List.Content>\n                                                                        Points:{' '}\n                                                                        {parseFloat(\n                                                                            pick\n                                                                                .subline\n                                                                                .nbaPointsLine\n                                                                        ).toFixed(\n                                                                            1\n                                                                        )}\n                                                                    </List.Content>\n                                                                </List.Item>\n                                                                <List.Item>\n                                                                    <List.Icon name=\"calendar outline\" />\n                                                                    <List.Content>\n                                                                        {\n                                                                            pick\n                                                                                .subline\n                                                                                .line\n                                                                                .game\n                                                                                .awayTeam\n                                                                                .abbreviation\n                                                                        }{' '}\n                                                                        @{' '}\n                                                                        {\n                                                                            pick\n                                                                                .subline\n                                                                                .line\n                                                                                .game\n                                                                                .homeTeam\n                                                                                .abbreviation\n                                                                        }{' '}\n                                                                        -{' '}\n                                                                        {moment(\n                                                                            pick\n                                                                                .subline\n                                                                                .line\n                                                                                .game\n                                                                                .datetime\n                                                                        )\n                                                                            .tz(\n                                                                                'America/Los_Angeles'\n                                                                            )\n                                                                            .format(\n                                                                                'h:mma z'\n                                                                            )}\n                                                                    </List.Content>\n                                                                </List.Item>\n                                                                <List.Item>\n                                                                    <List.Icon name=\"basketball ball\" />\n                                                                    <List.Content>\n                                                                        {pick.underNbaPoints\n                                                                            ? 'Under'\n                                                                            : 'Over'}\n                                                                    </List.Content>\n                                                                </List.Item>\n                                                            </List>\n                                                        </Grid.Column>\n                                                    </Grid.Row>\n                                                </Grid>\n                                            </Card.Content>\n                                        </Card>\n                                    )\n                                })}\n                            </Card.Group>\n                        </div>\n                    )\n                })}\n        </Form>\n    )\n}\n\nexport default Active\n","/home/manish/work/underline/client/src/views/Completed.jsx",["79","80","81","82","83","84","85"],"import React, { useState } from 'react'\nimport {\n    Message,\n    Card,\n    Header,\n    Grid,\n    Image,\n    List,\n    Form,\n    Button,\n    Container,\n} from 'semantic-ui-react'\nimport logo from 'images/logo.png'\nimport { Helmet } from 'react-helmet'\nimport { gql, useQuery } from '@apollo/client'\nimport { saveJWT } from 'utils'\nimport { useHistory } from 'react-router-dom'\nimport moment from 'moment-timezone'\nimport './Active.scss'\n\nconst GET_INACTIVE_SLIPS_QUERY = gql`\n    query {\n        inactiveSlips {\n            id\n            datetimeCreated\n            picks {\n                id\n                underNbaPoints\n                subline {\n                    nbaPointsLine\n                    line {\n                        nbaPointsActual\n                        id\n                        player {\n                            name\n                            headshotUrl\n                        }\n                        game {\n                            homeTeam {\n                                abbreviation\n                                id\n                            }\n                            awayTeam {\n                                abbreviation\n                                id\n                            }\n                            datetime\n                        }\n                    }\n                }\n            }\n        }\n    }\n`\n\nconst Active = () => {\n    const history = useHistory()\n    const { data } = useQuery(GET_INACTIVE_SLIPS_QUERY)\n\n    return (\n        <Form loading={!data} id=\"ul-active\">\n            <Helmet>\n                <title>Completed slips</title>\n            </Helmet>\n            {data &&\n                data.inactiveSlips.map((slip) => {\n                    return (\n                        <div className=\"slip\">\n                            <Header as=\"h3\">\n                                Slip&nbsp;\n                                {moment(slip.datetimeCreated)\n                                    .tz('America/Los_Angeles')\n                                    .format('M/D/YY')}\n                            </Header>\n                            <Card.Group>\n                                {slip.picks.map((pick) => {\n                                    return (\n                                        <Card className=\"slip-card\">\n                                            <Card.Content>\n                                                <Grid columns=\"two\" divided>\n                                                    <Grid.Row>\n                                                        <Grid.Column>\n                                                            <Image\n                                                                src={\n                                                                    pick.subline\n                                                                        .line\n                                                                        .player\n                                                                        .headshotUrl\n                                                                }\n                                                            />\n                                                        </Grid.Column>\n                                                        <Grid.Column>\n                                                            <Header as=\"h4\">\n                                                                {\n                                                                    pick.subline\n                                                                        .line\n                                                                        .player\n                                                                        .name\n                                                                }\n                                                            </Header>\n                                                            <List>\n                                                                <List.Item className=\"lol\">\n                                                                    <List.Icon name=\"hashtag\" />\n                                                                    <List.Content>\n                                                                        Points:{' '}\n                                                                        {parseFloat(\n                                                                            pick\n                                                                                .subline\n                                                                                .nbaPointsLine\n                                                                        ).toFixed(\n                                                                            1\n                                                                        )}\n                                                                    </List.Content>\n                                                                </List.Item>\n                                                                <List.Item className=\"lol\">\n                                                                    <List.Icon name=\"hashtag\" />\n                                                                    <List.Content>\n                                                                        Actual\n                                                                        points:{' '}\n                                                                        {parseFloat(\n                                                                            pick\n                                                                                .subline\n                                                                                .line\n                                                                                .nbaPointsActual\n                                                                        ).toFixed(\n                                                                            1\n                                                                        )}\n                                                                    </List.Content>\n                                                                </List.Item>\n                                                                <List.Item>\n                                                                    <List.Icon name=\"calendar outline\" />\n                                                                    <List.Content>\n                                                                        {\n                                                                            pick\n                                                                                .subline\n                                                                                .line\n                                                                                .game\n                                                                                .awayTeam\n                                                                                .abbreviation\n                                                                        }{' '}\n                                                                        @{' '}\n                                                                        {\n                                                                            pick\n                                                                                .subline\n                                                                                .line\n                                                                                .game\n                                                                                .homeTeam\n                                                                                .abbreviation\n                                                                        }{' '}\n                                                                        -{' '}\n                                                                        {moment(\n                                                                            pick\n                                                                                .subline\n                                                                                .line\n                                                                                .game\n                                                                                .datetime\n                                                                        )\n                                                                            .tz(\n                                                                                'America/Los_Angeles'\n                                                                            )\n                                                                            .format(\n                                                                                'h:mma z'\n                                                                            )}\n                                                                    </List.Content>\n                                                                </List.Item>\n                                                                <List.Item>\n                                                                    <List.Icon name=\"basketball ball\" />\n                                                                    <List.Content>\n                                                                        {pick.underNbaPoints\n                                                                            ? 'Under'\n                                                                            : 'Over'}\n                                                                    </List.Content>\n                                                                </List.Item>\n                                                            </List>\n                                                        </Grid.Column>\n                                                    </Grid.Row>\n                                                </Grid>\n                                            </Card.Content>\n                                        </Card>\n                                    )\n                                })}\n                            </Card.Group>\n                        </div>\n                    )\n                })}\n        </Form>\n    )\n}\n\nexport default Active\n",{"ruleId":"86","severity":1,"message":"87","line":1,"column":10,"nodeType":"88","messageId":"89","endLine":1,"endColumn":13},{"ruleId":"86","severity":1,"message":"90","line":1,"column":15,"nodeType":"88","messageId":"89","endLine":1,"endColumn":23},{"ruleId":"86","severity":1,"message":"91","line":14,"column":5,"nodeType":"88","messageId":"89","endLine":14,"endColumn":9},{"ruleId":"86","severity":1,"message":"92","line":3,"column":5,"nodeType":"88","messageId":"89","endLine":3,"endColumn":12},{"ruleId":"86","severity":1,"message":"93","line":4,"column":5,"nodeType":"88","messageId":"89","endLine":4,"endColumn":9},{"ruleId":"86","severity":1,"message":"94","line":5,"column":5,"nodeType":"88","messageId":"89","endLine":5,"endColumn":13},{"ruleId":"86","severity":1,"message":"95","line":6,"column":5,"nodeType":"88","messageId":"89","endLine":6,"endColumn":12},{"ruleId":"86","severity":1,"message":"96","line":7,"column":5,"nodeType":"88","messageId":"89","endLine":7,"endColumn":9},{"ruleId":"86","severity":1,"message":"97","line":8,"column":5,"nodeType":"88","messageId":"89","endLine":8,"endColumn":9},{"ruleId":"86","severity":1,"message":"98","line":9,"column":5,"nodeType":"88","messageId":"89","endLine":9,"endColumn":9},{"ruleId":"86","severity":1,"message":"99","line":10,"column":5,"nodeType":"88","messageId":"89","endLine":10,"endColumn":10},{"ruleId":"86","severity":1,"message":"100","line":11,"column":5,"nodeType":"88","messageId":"89","endLine":11,"endColumn":11},{"ruleId":"86","severity":1,"message":"101","line":12,"column":5,"nodeType":"88","messageId":"89","endLine":12,"endColumn":10},{"ruleId":"86","severity":1,"message":"102","line":13,"column":5,"nodeType":"88","messageId":"89","endLine":13,"endColumn":14},{"ruleId":"86","severity":1,"message":"103","line":14,"column":5,"nodeType":"88","messageId":"89","endLine":14,"endColumn":11},{"ruleId":"104","severity":1,"message":"105","line":45,"column":21,"nodeType":"106","endLine":45,"endColumn":56},{"ruleId":"86","severity":1,"message":"107","line":1,"column":27,"nodeType":"88","messageId":"89","endLine":1,"endColumn":36},{"ruleId":"86","severity":1,"message":"92","line":3,"column":5,"nodeType":"88","messageId":"89","endLine":3,"endColumn":12},{"ruleId":"86","severity":1,"message":"108","line":6,"column":5,"nodeType":"88","messageId":"89","endLine":6,"endColumn":12},{"ruleId":"86","severity":1,"message":"95","line":7,"column":5,"nodeType":"88","messageId":"89","endLine":7,"endColumn":12},{"ruleId":"86","severity":1,"message":"109","line":9,"column":5,"nodeType":"88","messageId":"89","endLine":9,"endColumn":10},{"ruleId":"86","severity":1,"message":"101","line":16,"column":5,"nodeType":"88","messageId":"89","endLine":16,"endColumn":10},{"ruleId":"86","severity":1,"message":"102","line":17,"column":5,"nodeType":"88","messageId":"89","endLine":17,"endColumn":14},{"ruleId":"86","severity":1,"message":"110","line":19,"column":5,"nodeType":"88","messageId":"89","endLine":19,"endColumn":13},{"ruleId":"86","severity":1,"message":"111","line":20,"column":5,"nodeType":"88","messageId":"89","endLine":20,"endColumn":9},{"ruleId":"86","severity":1,"message":"112","line":22,"column":8,"nodeType":"88","messageId":"89","endLine":22,"endColumn":12},{"ruleId":"86","severity":1,"message":"113","line":58,"column":7,"nodeType":"88","messageId":"89","endLine":58,"endColumn":36},{"ruleId":"86","severity":1,"message":"114","line":157,"column":12,"nodeType":"88","messageId":"89","endLine":157,"endColumn":15},{"ruleId":"86","severity":1,"message":"115","line":157,"column":17,"nodeType":"88","messageId":"89","endLine":157,"endColumn":23},{"ruleId":"116","severity":1,"message":"117","line":178,"column":23,"nodeType":"118","messageId":"119","endLine":178,"endColumn":25},{"ruleId":"116","severity":1,"message":"117","line":182,"column":40,"nodeType":"118","messageId":"119","endLine":182,"endColumn":42},{"ruleId":"116","severity":1,"message":"120","line":212,"column":29,"nodeType":"118","messageId":"119","endLine":212,"endColumn":31},{"ruleId":"116","severity":1,"message":"120","line":248,"column":22,"nodeType":"118","messageId":"119","endLine":248,"endColumn":24},{"ruleId":"86","severity":1,"message":"121","line":270,"column":13,"nodeType":"88","messageId":"89","endLine":270,"endColumn":16},{"ruleId":"86","severity":1,"message":"122","line":271,"column":13,"nodeType":"88","messageId":"89","endLine":271,"endColumn":16},{"ruleId":"123","severity":1,"message":"124","line":302,"column":13,"nodeType":"118","messageId":"125","endLine":302,"endColumn":40},{"ruleId":"86","severity":1,"message":"126","line":1,"column":17,"nodeType":"88","messageId":"89","endLine":1,"endColumn":25},{"ruleId":"86","severity":1,"message":"108","line":3,"column":5,"nodeType":"88","messageId":"89","endLine":3,"endColumn":12},{"ruleId":"86","severity":1,"message":"103","line":10,"column":5,"nodeType":"88","messageId":"89","endLine":10,"endColumn":11},{"ruleId":"86","severity":1,"message":"102","line":11,"column":5,"nodeType":"88","messageId":"89","endLine":11,"endColumn":14},{"ruleId":"86","severity":1,"message":"112","line":13,"column":8,"nodeType":"88","messageId":"89","endLine":13,"endColumn":12},{"ruleId":"86","severity":1,"message":"127","line":16,"column":10,"nodeType":"88","messageId":"89","endLine":16,"endColumn":17},{"ruleId":"86","severity":1,"message":"128","line":56,"column":11,"nodeType":"88","messageId":"89","endLine":56,"endColumn":18},{"ruleId":"86","severity":1,"message":"126","line":1,"column":17,"nodeType":"88","messageId":"89","endLine":1,"endColumn":25},{"ruleId":"86","severity":1,"message":"108","line":3,"column":5,"nodeType":"88","messageId":"89","endLine":3,"endColumn":12},{"ruleId":"86","severity":1,"message":"103","line":10,"column":5,"nodeType":"88","messageId":"89","endLine":10,"endColumn":11},{"ruleId":"86","severity":1,"message":"102","line":11,"column":5,"nodeType":"88","messageId":"89","endLine":11,"endColumn":14},{"ruleId":"86","severity":1,"message":"112","line":13,"column":8,"nodeType":"88","messageId":"89","endLine":13,"endColumn":12},{"ruleId":"86","severity":1,"message":"127","line":16,"column":10,"nodeType":"88","messageId":"89","endLine":16,"endColumn":17},{"ruleId":"86","severity":1,"message":"128","line":57,"column":11,"nodeType":"88","messageId":"89","endLine":57,"endColumn":18},"no-unused-vars","'gql' is defined but never used.","Identifier","unusedVar","'useQuery' is defined but never used.","'Link' is defined but never used.","'Divider' is defined but never used.","'Form' is defined but never used.","'Progress' is defined but never used.","'Segment' is defined but never used.","'Grid' is defined but never used.","'Icon' is defined but never used.","'Card' is defined but never used.","'Image' is defined but never used.","'Header' is defined but never used.","'Input' is defined but never used.","'Container' is defined but never used.","'Button' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Component' is defined but never used.","'Message' is defined but never used.","'Label' is defined but never used.","'Dropdown' is defined but never used.","'Menu' is defined but never used.","'logo' is defined but never used.","'CHECK_APPROVED_LOCATION_QUERY' is assigned a value but never used.","'tab' is assigned a value but never used.","'setTab' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","'lat' is defined but never used.","'lng' is assigned a value but never used.","no-negated-in-lhs","The 'in' expression's left operand is negated.","negatedLHS","'useState' is defined but never used.","'saveJWT' is defined but never used.","'history' is assigned a value but never used."]