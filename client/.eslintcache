[{"/home/manish/work/underline/client/src/App.js":"1","/home/manish/work/underline/client/src/index.js":"2","/home/manish/work/underline/client/src/views/Login.jsx":"3","/home/manish/work/underline/client/src/utils.js":"4","/home/manish/work/underline/client/src/components/Main.jsx":"5","/home/manish/work/underline/client/src/views/Lobby.jsx":"6","/home/manish/work/underline/client/src/views/Active.jsx":"7","/home/manish/work/underline/client/src/views/Completed.jsx":"8","/home/manish/work/underline/client/src/views/Signup.jsx":"9","/home/manish/work/underline/client/src/views/Settings.jsx":"10","/home/manish/work/underline/client/src/reportWebVitals.js":"11"},{"size":3042,"mtime":1614643691347,"results":"12","hashOfConfig":"13"},{"size":542,"mtime":1612329863243,"results":"14","hashOfConfig":"13"},{"size":4153,"mtime":1614066364554,"results":"15","hashOfConfig":"13"},{"size":287,"mtime":1614024241798,"results":"16","hashOfConfig":"13"},{"size":6101,"mtime":1614888109278,"results":"17","hashOfConfig":"13"},{"size":25557,"mtime":1614885049754,"results":"18","hashOfConfig":"13"},{"size":9045,"mtime":1614884378527,"results":"19","hashOfConfig":"13"},{"size":10381,"mtime":1614884229878,"results":"20","hashOfConfig":"13"},{"size":8065,"mtime":1614124693136,"results":"21","hashOfConfig":"13"},{"size":9313,"mtime":1614840044661,"results":"22","hashOfConfig":"13"},{"size":362,"mtime":1612313307864,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"27"},"1dp8guc",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},"/home/manish/work/underline/client/src/App.js",["52","53","54"],"import { gql, useQuery } from '@apollo/client'\nimport { getJWT } from './utils'\nimport {\n    createHttpLink,\n    ApolloProvider,\n    ApolloClient,\n    InMemoryCache,\n} from '@apollo/client'\nimport { setContext } from '@apollo/client/link/context'\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link,\n    Redirect,\n} from 'react-router-dom'\nimport Login from 'views/Login.jsx'\nimport Signup from 'views/Signup.jsx'\nimport Lobby from 'views/Lobby.jsx'\nimport Active from 'views/Active.jsx'\nimport Completed from 'views/Completed.jsx'\nimport Settings from 'views/Settings.jsx'\nimport Main from 'components/Main'\n\nconst authLink = setContext((_, { headers }) => {\n    const token = getJWT()\n    return {\n        headers: {\n            authorization: token ? `JWT ${token}` : '',\n        },\n    }\n})\n\nconst httpLink = createHttpLink({\n    uri:\n        process.env.NODE_ENV === 'production'\n            ? '/gql'\n            : 'http://localhost:5000/graphql/',\n})\n\nconst defaultOptions: DefaultOptions = {\n    watchQuery: {\n        fetchPolicy: 'no-cache',\n        errorPolicy: 'ignore',\n    },\n    query: {\n        fetchPolicy: 'no-cache',\n        errorPolicy: 'all',\n    },\n}\n\nconst client = new ApolloClient({\n    link: authLink.concat(httpLink),\n    cache: new InMemoryCache(),\n    defaultOptions: defaultOptions,\n})\n\nconst PrivateRoute = ({ component: Component, ...rest }) => (\n    <Route\n        {...rest}\n        render={(props) =>\n            getJWT() ? (\n                <Main>\n                    <Component {...props} />\n                </Main>\n            ) : (\n                <Redirect to=\"/login\" />\n            )\n        }\n    />\n)\n\nconst NonLoggedInRoute = ({ component: Component, ...rest }) => (\n    <Route\n        {...rest}\n        render={(props) =>\n            getJWT() ? <Redirect to=\"/lobby\" /> : <Component {...props} />\n        }\n    />\n)\n\nfunction App() {\n    return (\n        <ApolloProvider client={client}>\n            <Router>\n                <Switch>\n                    <PrivateRoute\n                        path=\"/lobby\"\n                        component={Lobby}\n                    ></PrivateRoute>\n                    <PrivateRoute\n                        path=\"/active\"\n                        component={Active}\n                    ></PrivateRoute>\n                    <PrivateRoute\n                        path=\"/completed\"\n                        component={Completed}\n                    ></PrivateRoute>\n                    <PrivateRoute\n                        path=\"/settings/:section?\"\n                        component={Settings}\n                    ></PrivateRoute>\n                    <NonLoggedInRoute\n                        path=\"/signup\"\n                        component={Signup}\n                    ></NonLoggedInRoute>\n                    <NonLoggedInRoute\n                        path=\"/\"\n                        component={Login}\n                    ></NonLoggedInRoute>\n                </Switch>\n            </Router>\n        </ApolloProvider>\n    )\n}\n\nexport default App\n",["55","56"],"/home/manish/work/underline/client/src/index.js",[],["57","58"],"/home/manish/work/underline/client/src/views/Login.jsx",[],"/home/manish/work/underline/client/src/utils.js",[],["59","60"],"/home/manish/work/underline/client/src/components/Main.jsx",["61","62","63","64","65","66","67","68","69","70","71","72","73"],"/home/manish/work/underline/client/src/views/Lobby.jsx",["74","75","76","77","78","79","80","81","82","83","84","85","86","87","88","89","90","91","92","93"],"/home/manish/work/underline/client/src/views/Active.jsx",["94","95","96","97","98","99","100"],"import React, { useState } from 'react'\nimport {\n    Message,\n    Card,\n    Header,\n    Grid,\n    Image,\n    Modal,\n    Icon,\n    Label,\n    List,\n    Form,\n    Button,\n    Container,\n    Segment,\n} from 'semantic-ui-react'\nimport logo from 'images/logo.png'\nimport { Helmet } from 'react-helmet'\nimport { gql, useQuery } from '@apollo/client'\nimport { parseQuery, saveJWT } from 'utils'\nimport { Link, useLocation, useHistory } from 'react-router-dom'\nimport moment from 'moment-timezone'\nimport './Active.scss'\n\nconst GET_ACTIVE_SLIPS_QUERY = gql`\n    query {\n        activeSlips {\n            id\n            datetimeCreated\n            entryAmount\n            payoutAmount\n            freeToPlay\n            picks {\n                id\n                underNbaPoints\n                won\n                subline {\n                    nbaPointsLine\n                    line {\n                        nbaPointsActual\n                        id\n                        invalidated\n                        player {\n                            name\n                            headshotUrl\n                        }\n                        game {\n                            homeTeam {\n                                abbreviation\n                                id\n                            }\n                            awayTeam {\n                                abbreviation\n                                id\n                            }\n                            datetime\n                        }\n                    }\n                }\n            }\n        }\n    }\n`\n\nconst Active = () => {\n    const history = useHistory()\n    const { data } = useQuery(GET_ACTIVE_SLIPS_QUERY)\n    const [successModalVisible, setSuccessModalVisible] = useState(\n        parseQuery(useLocation().search).get('success') !== null\n    )\n\n    return (\n        <Form loading={!data} id=\"ul-active\">\n            <Helmet>\n                <title>Active slips</title>\n            </Helmet>\n            <Modal\n                onClose={() => setSuccessModalVisible(false)}\n                open={successModalVisible}\n                size=\"small\"\n            >\n                <Header>\n                    <Icon name=\"check circle\" />\n                    Success\n                </Header>\n                <Modal.Content>\n                    <p>Your slip has been submitted.</p>\n\n                    {parseQuery(useLocation().search).get('freetoplay') !==\n                        null && (\n                        <p>\n                            This is a free to play entry. Underline only\n                            operates paid entries in certain states due to daily\n                            fantasy laws.\n                        </p>\n                    )}\n                </Modal.Content>\n                <Modal.Actions>\n                    <Button onClick={() => setSuccessModalVisible(false)}>\n                        OK\n                    </Button>\n                </Modal.Actions>\n            </Modal>\n            <Header as=\"h2\">Active slips</Header>\n            {data && data.activeSlips.length === 0 && (\n                <div>\n                    No slips yet. Go to the <Link to=\"/lobby\">Lobby</Link> to\n                    make some picks.\n                </div>\n            )}\n\n            {data &&\n                data.activeSlips.map((slip) => {\n                    return (\n                        <Segment className=\"slip\" raised>\n                            <Header as=\"h3\" className=\"title\">\n                                {' '}\n                                {`${slip.picks.length} Picks for $${slip.payoutAmount}`}\n                            </Header>\n                            <Label\n                                color={slip.freeToPlay ? '' : 'black'}\n                                attached=\"top right\"\n                            >\n                                {slip.freeToPlay\n                                    ? 'Free to Play'\n                                    : 'Paid Entry'}\n                            </Label>\n                            {slip.picks.map((pick, i) => (\n                                <Grid className=\"pick-table\">\n                                    <Grid.Row>\n                                        <Grid.Column width={3}>\n                                            <Image\n                                                size=\"tiny\"\n                                                src={\n                                                    pick.subline.line.player\n                                                        .headshotUrl\n                                                }\n                                            />\n                                        </Grid.Column>\n                                        <Grid.Column width={5}>\n                                            <Header\n                                                as=\"h4\"\n                                                className=\"player-name\"\n                                            >\n                                                {pick.subline.line.player.name}\n                                            </Header>\n                                            <span className=\"over-under\">\n                                                {`${\n                                                    pick.underNbaPoints\n                                                        ? 'Under'\n                                                        : 'Over'\n                                                }`}\n                                            </span>{' '}\n                                            {`${parseFloat(\n                                                pick.subline.nbaPointsLine\n                                            ).toFixed(1)} points`}\n                                        </Grid.Column>\n                                        <Grid.Column width={5}>\n                                            {\n                                                pick.subline.line.game.awayTeam\n                                                    .abbreviation\n                                            }{' '}\n                                            @{' '}\n                                            {\n                                                pick.subline.line.game.homeTeam\n                                                    .abbreviation\n                                            }{' '}\n                                            -{' '}\n                                            {moment(\n                                                pick.subline.line.game.datetime\n                                            )\n                                                .tz('America/Los_Angeles')\n                                                .format('h:mma z')}\n                                            {pick.subline.line\n                                                .nbaPointsActual && (\n                                                <div>\n                                                    {`${parseInt(\n                                                        pick.subline.line\n                                                            .nbaPointsActual\n                                                    )} points scored`}\n                                                </div>\n                                            )}\n                                        </Grid.Column>\n                                        <Grid.Column width={3}>\n                                            {pick.won === null && (\n                                                <Label color=\"gray\">\n                                                    In progress\n                                                </Label>\n                                            )}\n                                            {pick.won === true && (\n                                                <Label color=\"green\">Won</Label>\n                                            )}\n                                            {pick.won === false && (\n                                                <Label color=\"red\">Lost</Label>\n                                            )}\n                                        </Grid.Column>\n                                    </Grid.Row>\n                                </Grid>\n                            ))}\n                            <div className=\"details\">\n                                <div className=\"created\">\n                                    {moment(slip.datetimeCreated).format(\n                                        'MMMM Do YYYY'\n                                    )}\n                                </div>\n                                <div className=\"entry-amount\">\n                                    ${`${slip.entryAmount} Entry`}\n                                </div>\n                            </div>\n                        </Segment>\n                    )\n                })}\n        </Form>\n    )\n}\n\nexport default Active\n","/home/manish/work/underline/client/src/views/Completed.jsx",["101","102","103","104","105","106","107"],"/home/manish/work/underline/client/src/views/Signup.jsx",[],"/home/manish/work/underline/client/src/views/Settings.jsx",["108","109","110","111","112","113","114","115"],"/home/manish/work/underline/client/src/reportWebVitals.js",[],["116","117"],{"ruleId":"118","severity":1,"message":"119","line":1,"column":10,"nodeType":"120","messageId":"121","endLine":1,"endColumn":13},{"ruleId":"118","severity":1,"message":"122","line":1,"column":15,"nodeType":"120","messageId":"121","endLine":1,"endColumn":23},{"ruleId":"118","severity":1,"message":"123","line":14,"column":5,"nodeType":"120","messageId":"121","endLine":14,"endColumn":9},{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","replacedBy":"127"},{"ruleId":"124","replacedBy":"128"},{"ruleId":"126","replacedBy":"129"},{"ruleId":"124","replacedBy":"130"},{"ruleId":"126","replacedBy":"131"},{"ruleId":"118","severity":1,"message":"132","line":2,"column":17,"nodeType":"120","messageId":"121","endLine":2,"endColumn":25},{"ruleId":"118","severity":1,"message":"133","line":4,"column":5,"nodeType":"120","messageId":"121","endLine":4,"endColumn":12},{"ruleId":"118","severity":1,"message":"134","line":5,"column":5,"nodeType":"120","messageId":"121","endLine":5,"endColumn":9},{"ruleId":"118","severity":1,"message":"135","line":6,"column":5,"nodeType":"120","messageId":"121","endLine":6,"endColumn":13},{"ruleId":"118","severity":1,"message":"136","line":7,"column":5,"nodeType":"120","messageId":"121","endLine":7,"endColumn":12},{"ruleId":"118","severity":1,"message":"137","line":9,"column":5,"nodeType":"120","messageId":"121","endLine":9,"endColumn":9},{"ruleId":"118","severity":1,"message":"138","line":10,"column":5,"nodeType":"120","messageId":"121","endLine":10,"endColumn":9},{"ruleId":"118","severity":1,"message":"139","line":11,"column":5,"nodeType":"120","messageId":"121","endLine":11,"endColumn":10},{"ruleId":"118","severity":1,"message":"140","line":12,"column":5,"nodeType":"120","messageId":"121","endLine":12,"endColumn":11},{"ruleId":"118","severity":1,"message":"141","line":13,"column":5,"nodeType":"120","messageId":"121","endLine":13,"endColumn":10},{"ruleId":"118","severity":1,"message":"142","line":14,"column":5,"nodeType":"120","messageId":"121","endLine":14,"endColumn":14},{"ruleId":"143","severity":1,"message":"144","line":52,"column":33,"nodeType":"145","endLine":52,"endColumn":74},{"ruleId":"143","severity":1,"message":"144","line":95,"column":33,"nodeType":"145","endLine":95,"endColumn":68},{"ruleId":"118","severity":1,"message":"146","line":1,"column":27,"nodeType":"120","messageId":"121","endLine":1,"endColumn":36},{"ruleId":"118","severity":1,"message":"133","line":3,"column":5,"nodeType":"120","messageId":"121","endLine":3,"endColumn":12},{"ruleId":"118","severity":1,"message":"147","line":6,"column":5,"nodeType":"120","messageId":"121","endLine":6,"endColumn":12},{"ruleId":"118","severity":1,"message":"136","line":7,"column":5,"nodeType":"120","messageId":"121","endLine":7,"endColumn":12},{"ruleId":"118","severity":1,"message":"148","line":9,"column":5,"nodeType":"120","messageId":"121","endLine":9,"endColumn":10},{"ruleId":"118","severity":1,"message":"141","line":16,"column":5,"nodeType":"120","messageId":"121","endLine":16,"endColumn":10},{"ruleId":"118","severity":1,"message":"142","line":17,"column":5,"nodeType":"120","messageId":"121","endLine":17,"endColumn":14},{"ruleId":"118","severity":1,"message":"149","line":19,"column":5,"nodeType":"120","messageId":"121","endLine":19,"endColumn":13},{"ruleId":"118","severity":1,"message":"150","line":20,"column":5,"nodeType":"120","messageId":"121","endLine":20,"endColumn":9},{"ruleId":"118","severity":1,"message":"151","line":22,"column":8,"nodeType":"120","messageId":"121","endLine":22,"endColumn":12},{"ruleId":"118","severity":1,"message":"152","line":64,"column":7,"nodeType":"120","messageId":"121","endLine":64,"endColumn":36},{"ruleId":"118","severity":1,"message":"153","line":187,"column":12,"nodeType":"120","messageId":"121","endLine":187,"endColumn":15},{"ruleId":"118","severity":1,"message":"154","line":187,"column":17,"nodeType":"120","messageId":"121","endLine":187,"endColumn":23},{"ruleId":"155","severity":1,"message":"156","line":216,"column":23,"nodeType":"157","messageId":"158","endLine":216,"endColumn":25},{"ruleId":"155","severity":1,"message":"156","line":220,"column":40,"nodeType":"157","messageId":"158","endLine":220,"endColumn":42},{"ruleId":"155","severity":1,"message":"159","line":250,"column":29,"nodeType":"157","messageId":"158","endLine":250,"endColumn":31},{"ruleId":"155","severity":1,"message":"159","line":286,"column":22,"nodeType":"157","messageId":"158","endLine":286,"endColumn":24},{"ruleId":"118","severity":1,"message":"160","line":309,"column":13,"nodeType":"120","messageId":"121","endLine":309,"endColumn":16},{"ruleId":"118","severity":1,"message":"161","line":310,"column":13,"nodeType":"120","messageId":"121","endLine":310,"endColumn":16},{"ruleId":"126","severity":1,"message":"162","line":352,"column":13,"nodeType":"157","messageId":"163","endLine":352,"endColumn":40},{"ruleId":"118","severity":1,"message":"147","line":3,"column":5,"nodeType":"120","messageId":"121","endLine":3,"endColumn":12},{"ruleId":"118","severity":1,"message":"138","line":4,"column":5,"nodeType":"120","messageId":"121","endLine":4,"endColumn":9},{"ruleId":"118","severity":1,"message":"164","line":11,"column":5,"nodeType":"120","messageId":"121","endLine":11,"endColumn":9},{"ruleId":"118","severity":1,"message":"142","line":14,"column":5,"nodeType":"120","messageId":"121","endLine":14,"endColumn":14},{"ruleId":"118","severity":1,"message":"151","line":17,"column":8,"nodeType":"120","messageId":"121","endLine":17,"endColumn":12},{"ruleId":"118","severity":1,"message":"165","line":20,"column":22,"nodeType":"120","messageId":"121","endLine":20,"endColumn":29},{"ruleId":"118","severity":1,"message":"166","line":66,"column":11,"nodeType":"120","messageId":"121","endLine":66,"endColumn":18},{"ruleId":"118","severity":1,"message":"147","line":3,"column":5,"nodeType":"120","messageId":"121","endLine":3,"endColumn":12},{"ruleId":"118","severity":1,"message":"138","line":4,"column":5,"nodeType":"120","messageId":"121","endLine":4,"endColumn":9},{"ruleId":"118","severity":1,"message":"164","line":11,"column":5,"nodeType":"120","messageId":"121","endLine":11,"endColumn":9},{"ruleId":"118","severity":1,"message":"142","line":14,"column":5,"nodeType":"120","messageId":"121","endLine":14,"endColumn":14},{"ruleId":"118","severity":1,"message":"151","line":17,"column":8,"nodeType":"120","messageId":"121","endLine":17,"endColumn":12},{"ruleId":"118","severity":1,"message":"165","line":20,"column":22,"nodeType":"120","messageId":"121","endLine":20,"endColumn":29},{"ruleId":"118","severity":1,"message":"166","line":68,"column":11,"nodeType":"120","messageId":"121","endLine":68,"endColumn":18},{"ruleId":"118","severity":1,"message":"167","line":8,"column":5,"nodeType":"120","messageId":"121","endLine":8,"endColumn":12},{"ruleId":"118","severity":1,"message":"147","line":9,"column":5,"nodeType":"120","messageId":"121","endLine":9,"endColumn":12},{"ruleId":"118","severity":1,"message":"142","line":15,"column":5,"nodeType":"120","messageId":"121","endLine":15,"endColumn":14},{"ruleId":"118","severity":1,"message":"151","line":17,"column":8,"nodeType":"120","messageId":"121","endLine":17,"endColumn":12},{"ruleId":"118","severity":1,"message":"168","line":20,"column":10,"nodeType":"120","messageId":"121","endLine":20,"endColumn":20},{"ruleId":"118","severity":1,"message":"165","line":20,"column":22,"nodeType":"120","messageId":"121","endLine":20,"endColumn":29},{"ruleId":"118","severity":1,"message":"169","line":21,"column":21,"nodeType":"120","messageId":"121","endLine":21,"endColumn":32},{"ruleId":"118","severity":1,"message":"166","line":225,"column":11,"nodeType":"120","messageId":"121","endLine":225,"endColumn":18},{"ruleId":"124","replacedBy":"170"},{"ruleId":"126","replacedBy":"171"},"no-unused-vars","'gql' is defined but never used.","Identifier","unusedVar","'useQuery' is defined but never used.","'Link' is defined but never used.","no-native-reassign",["172"],"no-negated-in-lhs",["173"],["172"],["173"],["172"],["173"],"'useState' is defined but never used.","'Divider' is defined but never used.","'Form' is defined but never used.","'Progress' is defined but never used.","'Segment' is defined but never used.","'Icon' is defined but never used.","'Card' is defined but never used.","'Image' is defined but never used.","'Header' is defined but never used.","'Input' is defined but never used.","'Container' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Component' is defined but never used.","'Message' is defined but never used.","'Label' is defined but never used.","'Dropdown' is defined but never used.","'Menu' is defined but never used.","'logo' is defined but never used.","'CHECK_APPROVED_LOCATION_QUERY' is assigned a value but never used.","'tab' is assigned a value but never used.","'setTab' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","'lat' is defined but never used.","'lng' is assigned a value but never used.","The 'in' expression's left operand is negated.","negatedLHS","'List' is defined but never used.","'saveJWT' is defined but never used.","'history' is assigned a value but never used.","'Success' is defined but never used.","'parseQuery' is defined but never used.","'useLocation' is defined but never used.",["172"],["173"],"no-global-assign","no-unsafe-negation"]