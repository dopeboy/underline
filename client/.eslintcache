[{"/home/manish/work/underline/client/src/App.js":"1","/home/manish/work/underline/client/src/index.js":"2","/home/manish/work/underline/client/src/views/Login.jsx":"3","/home/manish/work/underline/client/src/utils.js":"4","/home/manish/work/underline/client/src/components/Main.jsx":"5","/home/manish/work/underline/client/src/views/Lobby.jsx":"6","/home/manish/work/underline/client/src/views/Active.jsx":"7","/home/manish/work/underline/client/src/views/Completed.jsx":"8","/home/manish/work/underline/client/src/views/Signup.jsx":"9"},{"size":2544,"mtime":1614067037864,"results":"10","hashOfConfig":"11"},{"size":542,"mtime":1612329863243,"results":"12","hashOfConfig":"11"},{"size":4153,"mtime":1614066364554,"results":"13","hashOfConfig":"11"},{"size":287,"mtime":1614024241798,"results":"14","hashOfConfig":"11"},{"size":2319,"mtime":1613696994530,"results":"15","hashOfConfig":"11"},{"size":23883,"mtime":1614066027204,"results":"16","hashOfConfig":"11"},{"size":8183,"mtime":1614042812613,"results":"17","hashOfConfig":"11"},{"size":8492,"mtime":1614042771140,"results":"18","hashOfConfig":"11"},{"size":6583,"mtime":1614067682539,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1dp8guc",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/manish/work/underline/client/src/App.js",["41","42","43"],"/home/manish/work/underline/client/src/index.js",[],["44","45"],"/home/manish/work/underline/client/src/views/Login.jsx",[],"/home/manish/work/underline/client/src/utils.js",[],"/home/manish/work/underline/client/src/components/Main.jsx",["46","47","48","49","50","51","52","53","54","55","56","57","58"],"import { gql, useQuery } from '@apollo/client'\nimport {\n    Divider,\n    Form,\n    Progress,\n    Segment,\n    Grid,\n    Icon,\n    Card,\n    Image,\n    Header,\n    Input,\n    Container,\n    Button,\n    Dropdown,\n    Menu,\n} from 'semantic-ui-react'\nimport logo from 'images/logo.png'\nimport { clearJWT } from 'utils'\nimport { Link, useLocation, useHistory } from 'react-router-dom'\nimport './Main.scss'\n\nconst GET_ME_QUERY = gql`\n    query {\n        me {\n            firstName\n            lastName\n        }\n    }\n`\n\nconst Main = (props) => {\n    const { data } = useQuery(GET_ME_QUERY)\n    const logoutUser = () => {\n        clearJWT()\n        history.push('/')\n    }\n    const history = useHistory()\n    const location = useLocation()\n\n    return (\n        <>\n            <Menu size=\"massive\" id=\"ule-navbar\">\n                <Menu.Item>\n                    <img src={logo} className=\"logo\" />\n                </Menu.Item>\n\n                <Menu.Item\n                    active={location.pathname === '/lobby'}\n                    as={Link}\n                    to=\"/lobby\"\n                >\n                    Lobby\n                </Menu.Item>\n                <Menu.Item\n                    active={location.pathname === '/active'}\n                    as={Link}\n                    to=\"/active\"\n                >\n                    Active\n                </Menu.Item>\n                <Menu.Item\n                    active={location.pathname === '/completed'}\n                    as={Link}\n                    to=\"/completed\"\n                >\n                    Completed\n                </Menu.Item>\n\n                <Menu.Menu position=\"right\">\n                    <Dropdown\n                        item\n                        text={\n                            data &&\n                            `${data.me.firstName} ${data.me.lastName[0]}.`\n                        }\n                    >\n                        <Dropdown.Menu>\n                            <Dropdown.Item onClick={logoutUser}>\n                                Logout\n                            </Dropdown.Item>\n                        </Dropdown.Menu>\n                    </Dropdown>\n                </Menu.Menu>\n            </Menu>\n            <div className=\"ule-container\">{props.children}</div>\n        </>\n    )\n}\n\nexport default Main\n","/home/manish/work/underline/client/src/views/Lobby.jsx",["59","60","61","62","63","64","65","66","67","68","69","70","71","72","73","74","75","76","77","78"],"/home/manish/work/underline/client/src/views/Active.jsx",["79","80","81","82","83","84","85"],"import React, { useState } from 'react'\nimport {\n    Message,\n    Card,\n    Header,\n    Grid,\n    Image,\n    Modal,\n    Icon,\n    Label,\n    List,\n    Form,\n    Button,\n    Container,\n    Segment,\n} from 'semantic-ui-react'\nimport logo from 'images/logo.png'\nimport { Helmet } from 'react-helmet'\nimport { gql, useQuery } from '@apollo/client'\nimport { parseQuery, saveJWT } from 'utils'\nimport { Link, useLocation, useHistory } from 'react-router-dom'\nimport moment from 'moment-timezone'\nimport './Active.scss'\n\nconst GET_ACTIVE_SLIPS_QUERY = gql`\n    query {\n        activeSlips {\n            id\n            datetimeCreated\n            entryAmount\n            payoutAmount\n            picks {\n                id\n                underNbaPoints\n                won\n                subline {\n                    nbaPointsLine\n                    line {\n                        nbaPointsActual\n                        id\n                        player {\n                            name\n                            headshotUrl\n                        }\n                        game {\n                            homeTeam {\n                                abbreviation\n                                id\n                            }\n                            awayTeam {\n                                abbreviation\n                                id\n                            }\n                            datetime\n                        }\n                    }\n                }\n            }\n        }\n    }\n`\n\nconst Active = () => {\n    const history = useHistory()\n    const { data } = useQuery(GET_ACTIVE_SLIPS_QUERY)\n    const [successModalVisible, setSuccessModalVisible] = useState(\n        parseQuery(useLocation().search).get('success') !== null\n    )\n\n    return (\n        <Form loading={!data} id=\"ul-active\">\n            <Helmet>\n                <title>Active slips</title>\n            </Helmet>\n            <Modal\n                onClose={() => setSuccessModalVisible(false)}\n                open={successModalVisible}\n                size=\"small\"\n            >\n                <Header>\n                    <Icon name=\"exclamation circle\" />\n                    Success\n                </Header>\n                <Modal.Content>\n                    <p>Your slip has been submitted.</p>\n                </Modal.Content>\n                <Modal.Actions>\n                    <Button onClick={() => setSuccessModalVisible(false)}>\n                        OK\n                    </Button>\n                </Modal.Actions>\n            </Modal>\n            <Header as=\"h2\">Active slips</Header>\n            {data && data.activeSlips.length === 0 && (\n                <div>\n                    No slips yet. Go to the <Link to=\"/lobby\">Lobby</Link> to\n                    make some picks.\n                </div>\n            )}\n\n            {data &&\n                data.activeSlips.map((slip) => {\n                    return (\n                        <Segment className=\"slip\" raised>\n                            <Header as=\"h3\" className=\"title\">\n                                {' '}\n                                {`${slip.picks.length} Picks for $${slip.payoutAmount}`}\n                            </Header>\n                            {slip.picks.map((pick, i) => (\n                                <Grid className=\"pick-table\">\n                                    <Grid.Row>\n                                        <Grid.Column width={3}>\n                                            <Image\n                                                size=\"tiny\"\n                                                src={\n                                                    pick.subline.line.player\n                                                        .headshotUrl\n                                                }\n                                            />\n                                        </Grid.Column>\n                                        <Grid.Column width={5}>\n                                            <Header\n                                                as=\"h4\"\n                                                className=\"player-name\"\n                                            >\n                                                {pick.subline.line.player.name}\n                                            </Header>\n                                            <span className=\"over-under\">\n                                                {`${\n                                                    pick.underNbaPoints\n                                                        ? 'Under'\n                                                        : 'Over'\n                                                }`}\n                                            </span>{' '}\n                                            {`${parseFloat(\n                                                pick.subline.nbaPointsLine\n                                            ).toFixed(1)} points`}\n                                        </Grid.Column>\n                                        <Grid.Column width={5}>\n                                            {\n                                                pick.subline.line.game.awayTeam\n                                                    .abbreviation\n                                            }{' '}\n                                            @{' '}\n                                            {\n                                                pick.subline.line.game.homeTeam\n                                                    .abbreviation\n                                            }{' '}\n                                            -{' '}\n                                            {moment(\n                                                pick.subline.line.game.datetime\n                                            )\n                                                .tz('America/Los_Angeles')\n                                                .format('h:mma z')}\n                                            {pick.subline.line\n                                                .nbaPointsActual && (\n                                                <div>\n                                                    {`${parseInt(\n                                                        pick.subline.line\n                                                            .nbaPointsActual\n                                                    )} points scored`}\n                                                </div>\n                                            )}\n                                        </Grid.Column>\n                                        <Grid.Column width={3}>\n                                            {pick.won === null && (\n                                                <Label color=\"gray\">\n                                                    In progress\n                                                </Label>\n                                            )}\n                                            {pick.won === true && (\n                                                <Label color=\"green\">Won</Label>\n                                            )}\n                                            {pick.won === false && (\n                                                <Label color=\"red\">Lost</Label>\n                                            )}\n                                        </Grid.Column>\n                                    </Grid.Row>\n                                </Grid>\n                            ))}\n                            <div className=\"details\">\n                                <div className=\"created\">\n                                    created{' '}\n                                    {moment(slip.datetimeCreated).fromNow()}\n                                </div>\n                                <div className=\"entry-amount\">\n                                    ${`${slip.entryAmount} Entry`}\n                                </div>\n                            </div>\n                        </Segment>\n                    )\n                })}\n        </Form>\n    )\n}\n\nexport default Active\n","/home/manish/work/underline/client/src/views/Completed.jsx",["86","87","88","89","90","91","92"],"/home/manish/work/underline/client/src/views/Signup.jsx",["93","94","95","96"],{"ruleId":"97","severity":1,"message":"98","line":1,"column":10,"nodeType":"99","messageId":"100","endLine":1,"endColumn":13},{"ruleId":"97","severity":1,"message":"101","line":1,"column":15,"nodeType":"99","messageId":"100","endLine":1,"endColumn":23},{"ruleId":"97","severity":1,"message":"102","line":14,"column":5,"nodeType":"99","messageId":"100","endLine":14,"endColumn":9},{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","replacedBy":"106"},{"ruleId":"97","severity":1,"message":"107","line":3,"column":5,"nodeType":"99","messageId":"100","endLine":3,"endColumn":12},{"ruleId":"97","severity":1,"message":"108","line":4,"column":5,"nodeType":"99","messageId":"100","endLine":4,"endColumn":9},{"ruleId":"97","severity":1,"message":"109","line":5,"column":5,"nodeType":"99","messageId":"100","endLine":5,"endColumn":13},{"ruleId":"97","severity":1,"message":"110","line":6,"column":5,"nodeType":"99","messageId":"100","endLine":6,"endColumn":12},{"ruleId":"97","severity":1,"message":"111","line":7,"column":5,"nodeType":"99","messageId":"100","endLine":7,"endColumn":9},{"ruleId":"97","severity":1,"message":"112","line":8,"column":5,"nodeType":"99","messageId":"100","endLine":8,"endColumn":9},{"ruleId":"97","severity":1,"message":"113","line":9,"column":5,"nodeType":"99","messageId":"100","endLine":9,"endColumn":9},{"ruleId":"97","severity":1,"message":"114","line":10,"column":5,"nodeType":"99","messageId":"100","endLine":10,"endColumn":10},{"ruleId":"97","severity":1,"message":"115","line":11,"column":5,"nodeType":"99","messageId":"100","endLine":11,"endColumn":11},{"ruleId":"97","severity":1,"message":"116","line":12,"column":5,"nodeType":"99","messageId":"100","endLine":12,"endColumn":10},{"ruleId":"97","severity":1,"message":"117","line":13,"column":5,"nodeType":"99","messageId":"100","endLine":13,"endColumn":14},{"ruleId":"97","severity":1,"message":"118","line":14,"column":5,"nodeType":"99","messageId":"100","endLine":14,"endColumn":11},{"ruleId":"119","severity":1,"message":"120","line":45,"column":21,"nodeType":"121","endLine":45,"endColumn":56},{"ruleId":"97","severity":1,"message":"122","line":1,"column":27,"nodeType":"99","messageId":"100","endLine":1,"endColumn":36},{"ruleId":"97","severity":1,"message":"107","line":3,"column":5,"nodeType":"99","messageId":"100","endLine":3,"endColumn":12},{"ruleId":"97","severity":1,"message":"123","line":6,"column":5,"nodeType":"99","messageId":"100","endLine":6,"endColumn":12},{"ruleId":"97","severity":1,"message":"110","line":7,"column":5,"nodeType":"99","messageId":"100","endLine":7,"endColumn":12},{"ruleId":"97","severity":1,"message":"124","line":9,"column":5,"nodeType":"99","messageId":"100","endLine":9,"endColumn":10},{"ruleId":"97","severity":1,"message":"116","line":16,"column":5,"nodeType":"99","messageId":"100","endLine":16,"endColumn":10},{"ruleId":"97","severity":1,"message":"117","line":17,"column":5,"nodeType":"99","messageId":"100","endLine":17,"endColumn":14},{"ruleId":"97","severity":1,"message":"125","line":19,"column":5,"nodeType":"99","messageId":"100","endLine":19,"endColumn":13},{"ruleId":"97","severity":1,"message":"126","line":20,"column":5,"nodeType":"99","messageId":"100","endLine":20,"endColumn":9},{"ruleId":"97","severity":1,"message":"127","line":22,"column":8,"nodeType":"99","messageId":"100","endLine":22,"endColumn":12},{"ruleId":"97","severity":1,"message":"128","line":64,"column":7,"nodeType":"99","messageId":"100","endLine":64,"endColumn":36},{"ruleId":"97","severity":1,"message":"129","line":176,"column":12,"nodeType":"99","messageId":"100","endLine":176,"endColumn":15},{"ruleId":"97","severity":1,"message":"130","line":176,"column":17,"nodeType":"99","messageId":"100","endLine":176,"endColumn":23},{"ruleId":"131","severity":1,"message":"132","line":201,"column":23,"nodeType":"133","messageId":"134","endLine":201,"endColumn":25},{"ruleId":"131","severity":1,"message":"132","line":205,"column":40,"nodeType":"133","messageId":"134","endLine":205,"endColumn":42},{"ruleId":"131","severity":1,"message":"135","line":235,"column":29,"nodeType":"133","messageId":"134","endLine":235,"endColumn":31},{"ruleId":"131","severity":1,"message":"135","line":271,"column":22,"nodeType":"133","messageId":"134","endLine":271,"endColumn":24},{"ruleId":"97","severity":1,"message":"136","line":293,"column":13,"nodeType":"99","messageId":"100","endLine":293,"endColumn":16},{"ruleId":"97","severity":1,"message":"137","line":294,"column":13,"nodeType":"99","messageId":"100","endLine":294,"endColumn":16},{"ruleId":"105","severity":1,"message":"138","line":325,"column":13,"nodeType":"133","messageId":"139","endLine":325,"endColumn":40},{"ruleId":"97","severity":1,"message":"123","line":3,"column":5,"nodeType":"99","messageId":"100","endLine":3,"endColumn":12},{"ruleId":"97","severity":1,"message":"113","line":4,"column":5,"nodeType":"99","messageId":"100","endLine":4,"endColumn":9},{"ruleId":"97","severity":1,"message":"140","line":11,"column":5,"nodeType":"99","messageId":"100","endLine":11,"endColumn":9},{"ruleId":"97","severity":1,"message":"117","line":14,"column":5,"nodeType":"99","messageId":"100","endLine":14,"endColumn":14},{"ruleId":"97","severity":1,"message":"127","line":17,"column":8,"nodeType":"99","messageId":"100","endLine":17,"endColumn":12},{"ruleId":"97","severity":1,"message":"141","line":20,"column":22,"nodeType":"99","messageId":"100","endLine":20,"endColumn":29},{"ruleId":"97","severity":1,"message":"142","line":64,"column":11,"nodeType":"99","messageId":"100","endLine":64,"endColumn":18},{"ruleId":"97","severity":1,"message":"123","line":3,"column":5,"nodeType":"99","messageId":"100","endLine":3,"endColumn":12},{"ruleId":"97","severity":1,"message":"113","line":4,"column":5,"nodeType":"99","messageId":"100","endLine":4,"endColumn":9},{"ruleId":"97","severity":1,"message":"140","line":11,"column":5,"nodeType":"99","messageId":"100","endLine":11,"endColumn":9},{"ruleId":"97","severity":1,"message":"117","line":14,"column":5,"nodeType":"99","messageId":"100","endLine":14,"endColumn":14},{"ruleId":"97","severity":1,"message":"127","line":17,"column":8,"nodeType":"99","messageId":"100","endLine":17,"endColumn":12},{"ruleId":"97","severity":1,"message":"141","line":20,"column":22,"nodeType":"99","messageId":"100","endLine":20,"endColumn":29},{"ruleId":"97","severity":1,"message":"142","line":65,"column":11,"nodeType":"99","messageId":"100","endLine":65,"endColumn":18},{"ruleId":"97","severity":1,"message":"143","line":24,"column":12,"nodeType":"99","messageId":"100","endLine":24,"endColumn":21},{"ruleId":"97","severity":1,"message":"144","line":25,"column":12,"nodeType":"99","messageId":"100","endLine":25,"endColumn":20},{"ruleId":"97","severity":1,"message":"145","line":26,"column":12,"nodeType":"99","messageId":"100","endLine":26,"endColumn":23},{"ruleId":"97","severity":1,"message":"146","line":29,"column":14,"nodeType":"99","messageId":"100","endLine":29,"endColumn":25},"no-unused-vars","'gql' is defined but never used.","Identifier","unusedVar","'useQuery' is defined but never used.","'Link' is defined but never used.","no-native-reassign",["147"],"no-negated-in-lhs",["148"],"'Divider' is defined but never used.","'Form' is defined but never used.","'Progress' is defined but never used.","'Segment' is defined but never used.","'Grid' is defined but never used.","'Icon' is defined but never used.","'Card' is defined but never used.","'Image' is defined but never used.","'Header' is defined but never used.","'Input' is defined but never used.","'Container' is defined but never used.","'Button' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Component' is defined but never used.","'Message' is defined but never used.","'Label' is defined but never used.","'Dropdown' is defined but never used.","'Menu' is defined but never used.","'logo' is defined but never used.","'CHECK_APPROVED_LOCATION_QUERY' is assigned a value but never used.","'tab' is assigned a value but never used.","'setTab' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","'lat' is defined but never used.","'lng' is assigned a value but never used.","The 'in' expression's left operand is negated.","negatedLHS","'List' is defined but never used.","'saveJWT' is defined but never used.","'history' is assigned a value but never used.","'firstName' is assigned a value but never used.","'lastName' is assigned a value but never used.","'phoneNumber' is assigned a value but never used.","'currentDate' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]