[{"/home/manish/work/underline/client/src/App.js":"1","/home/manish/work/underline/client/src/index.js":"2","/home/manish/work/underline/client/src/views/Login.jsx":"3","/home/manish/work/underline/client/src/views/Dashboard.jsx":"4","/home/manish/work/underline/client/src/utils.js":"5","/home/manish/work/underline/client/src/components/Main.jsx":"6"},{"size":1759,"mtime":1612995647269,"results":"7","hashOfConfig":"8"},{"size":542,"mtime":1612329863243,"results":"9","hashOfConfig":"8"},{"size":3530,"mtime":1612991634151,"results":"10","hashOfConfig":"8"},{"size":7576,"mtime":1612993915217,"results":"11","hashOfConfig":"8"},{"size":205,"mtime":1612992090593,"results":"12","hashOfConfig":"8"},{"size":1699,"mtime":1612997664829,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1dp8guc",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/manish/work/underline/client/src/App.js",["27","28","29"],"/home/manish/work/underline/client/src/index.js",[],"/home/manish/work/underline/client/src/views/Login.jsx",[],"/home/manish/work/underline/client/src/views/Dashboard.jsx",["30","31","32","33","34","35"],"import React, { Component } from 'react'\nimport {\n    Divider,\n    Form,\n    Progress,\n    Segment,\n    Grid,\n    Icon,\n    Card,\n    Image,\n    Header,\n    Input,\n    Container,\n    Button,\n    Dropdown,\n    Menu,\n} from 'semantic-ui-react'\nimport logo from '../images/logo.png'\nimport { gql, useQuery } from '@apollo/client'\nimport moment from 'moment-timezone'\nimport './Dashboard.css'\nimport { Helmet } from 'react-helmet'\n\nconst GET_TODAYS_LINES_QUERY = gql`\n    query {\n        todaysLines {\n            id\n            pointsLine\n            player {\n                id\n                name\n                headshotUrl\n            }\n            game {\n                datetime\n                homeTeam {\n                    abbreviation\n                }\n                awayTeam {\n                    abbreviation\n                }\n            }\n        }\n    }\n`\n\nconst PlayerList = () => {\n    const { data } = useQuery(GET_TODAYS_LINES_QUERY)\n    return (\n        <Card.Group>\n            {data && (\n                <>\n                    {data.todaysLines.map((line) => (\n                        <Card>\n                            <Image\n                                size=\"small\"\n                                src={line.player.headshotUrl}\n                                wrapped\n                                ui={false}\n                            />\n                            <Card.Content>\n                                <Card.Header>{line.player.name}</Card.Header>\n                                <Card.Meta>\n                                    <span className=\"date\">\n                                        Points: {line.pointsLine}\n                                    </span>\n                                </Card.Meta>\n                                <Card.Description>\n                                    {line.game.awayTeam.abbreviation} @{' '}\n                                    {line.game.homeTeam.abbreviation} -{' '}\n                                    {moment(line.game.datetime)\n                                        .tz('America/Los_Angeles')\n                                        .format('h:mma z')}\n                                </Card.Description>\n                            </Card.Content>\n                            <Card.Content extra>\n                                <Button.Group size=\"large\" fluid>\n                                    <Button>Under</Button>\n                                    <Button.Or />\n                                    <Button>Over</Button>\n                                </Button.Group>\n                            </Card.Content>\n                        </Card>\n                    ))}\n                </>\n            )}\n        </Card.Group>\n    )\n}\n\nexport default class Dashboard extends Component {\n    state = { activeItem: 'lobby', picks: [], percent: 0 }\n    under = () => {\n        this.setState({\n            picks: [...this.state.picks, true],\n            percent: this.state.percent + 20,\n        })\n    }\n\n    over = () => {\n        this.setState({\n            picks: [...this.state.picks, false],\n            percent: this.state.percent + 20,\n        })\n    }\n\n    handleItemClick = (e, { name }) => this.setState({ activeItem: name })\n\n    render() {\n        const { activeItem } = this.state\n\n        return (\n            <>\n                <Helmet>\n                    <title>Dashboard</title>\n                </Helmet>\n                <Menu secondary>\n                    <Menu.Item\n                        name=\"Lobby\"\n                        active={activeItem === 'lobby'}\n                        onClick={this.handleItemClick}\n                    />\n                    <Menu.Item\n                        name=\"active\"\n                        active={activeItem === 'active'}\n                        onClick={this.handleItemClick}\n                    />\n                    <Menu.Item\n                        name=\"completed\"\n                        active={activeItem === 'completed'}\n                        onClick={this.handleItemClick}\n                    />\n                </Menu>\n\n                <Grid>\n                    <Grid.Row>\n                        <Grid.Column width={12}>\n                            <Header as=\"h2\">Featured players</Header>\n                            <PlayerList />\n                        </Grid.Column>\n                        <Grid.Column width={4}>\n                            <Header as=\"h2\">Review picks</Header>\n                            <Progress\n                                percent={this.state.percent}\n                                color=\"green\"\n                            >\n                                {this.state.percent === 0\n                                    ? '1x'\n                                    : this.state.percent < 40\n                                    ? '3x'\n                                    : '6x'}\n                            </Progress>\n                            <Form>\n                                <Form.Group widths=\"equal\">\n                                    <Form.Input\n                                        fluid\n                                        icon=\"dollar\"\n                                        iconPosition=\"left\"\n                                        label=\"Entry amount\"\n                                        placeholder=\"Entry amount\"\n                                    />\n                                    <Form.Input\n                                        fluid\n                                        icon=\"dollar\"\n                                        iconPosition=\"left\"\n                                        label=\"Payout\"\n                                        placeholder=\"Payout\"\n                                    />\n                                </Form.Group>\n                                <Form.Button fluid color=\"green\">\n                                    Submit\n                                </Form.Button>\n                            </Form>\n                            {this.state.picks.length > 0 && <Divider />}\n                            {this.state.picks.map((item) => (\n                                <Card fluid>\n                                    <Card.Content>\n                                        <Image floated=\"left\" size=\"mini\" />\n                                        <Card.Header>\n                                            Patrick Mahones\n                                        </Card.Header>\n                                        <Card.Meta>\n                                            25.85 Fantasy Points\n                                        </Card.Meta>\n                                        <Card.Description>\n                                            KC @ TB - 3:30 PM\n                                        </Card.Description>\n                                    </Card.Content>\n                                    <Card.Content extra>\n                                        <Button\n                                            basic\n                                            color={item ? 'red' : 'green'}\n                                            fluid\n                                        >\n                                            {item ? 'Under' : 'Over'}\n                                        </Button>\n                                    </Card.Content>\n                                </Card>\n                            ))}\n                        </Grid.Column>\n                    </Grid.Row>\n                </Grid>\n            </>\n        )\n    }\n}\n","/home/manish/work/underline/client/src/utils.js",[],"/home/manish/work/underline/client/src/components/Main.jsx",["36","37","38","39","40","41","42","43","44","45","46","47","48"],{"ruleId":"49","severity":1,"message":"50","line":1,"column":10,"nodeType":"51","messageId":"52","endLine":1,"endColumn":13},{"ruleId":"49","severity":1,"message":"53","line":1,"column":15,"nodeType":"51","messageId":"52","endLine":1,"endColumn":23},{"ruleId":"49","severity":1,"message":"54","line":14,"column":5,"nodeType":"51","messageId":"52","endLine":14,"endColumn":9},{"ruleId":"49","severity":1,"message":"55","line":6,"column":5,"nodeType":"51","messageId":"52","endLine":6,"endColumn":12},{"ruleId":"49","severity":1,"message":"56","line":8,"column":5,"nodeType":"51","messageId":"52","endLine":8,"endColumn":9},{"ruleId":"49","severity":1,"message":"57","line":12,"column":5,"nodeType":"51","messageId":"52","endLine":12,"endColumn":10},{"ruleId":"49","severity":1,"message":"58","line":13,"column":5,"nodeType":"51","messageId":"52","endLine":13,"endColumn":14},{"ruleId":"49","severity":1,"message":"59","line":15,"column":5,"nodeType":"51","messageId":"52","endLine":15,"endColumn":13},{"ruleId":"49","severity":1,"message":"60","line":18,"column":8,"nodeType":"51","messageId":"52","endLine":18,"endColumn":12},{"ruleId":"49","severity":1,"message":"61","line":3,"column":5,"nodeType":"51","messageId":"52","endLine":3,"endColumn":12},{"ruleId":"49","severity":1,"message":"62","line":4,"column":5,"nodeType":"51","messageId":"52","endLine":4,"endColumn":9},{"ruleId":"49","severity":1,"message":"63","line":5,"column":5,"nodeType":"51","messageId":"52","endLine":5,"endColumn":13},{"ruleId":"49","severity":1,"message":"55","line":6,"column":5,"nodeType":"51","messageId":"52","endLine":6,"endColumn":12},{"ruleId":"49","severity":1,"message":"64","line":7,"column":5,"nodeType":"51","messageId":"52","endLine":7,"endColumn":9},{"ruleId":"49","severity":1,"message":"56","line":8,"column":5,"nodeType":"51","messageId":"52","endLine":8,"endColumn":9},{"ruleId":"49","severity":1,"message":"65","line":9,"column":5,"nodeType":"51","messageId":"52","endLine":9,"endColumn":9},{"ruleId":"49","severity":1,"message":"66","line":10,"column":5,"nodeType":"51","messageId":"52","endLine":10,"endColumn":10},{"ruleId":"49","severity":1,"message":"67","line":11,"column":5,"nodeType":"51","messageId":"52","endLine":11,"endColumn":11},{"ruleId":"49","severity":1,"message":"57","line":12,"column":5,"nodeType":"51","messageId":"52","endLine":12,"endColumn":10},{"ruleId":"49","severity":1,"message":"58","line":13,"column":5,"nodeType":"51","messageId":"52","endLine":13,"endColumn":14},{"ruleId":"49","severity":1,"message":"68","line":14,"column":5,"nodeType":"51","messageId":"52","endLine":14,"endColumn":11},{"ruleId":"69","severity":1,"message":"70","line":44,"column":21,"nodeType":"71","endLine":44,"endColumn":56},"no-unused-vars","'gql' is defined but never used.","Identifier","unusedVar","'useQuery' is defined but never used.","'Link' is defined but never used.","'Segment' is defined but never used.","'Icon' is defined but never used.","'Input' is defined but never used.","'Container' is defined but never used.","'Dropdown' is defined but never used.","'logo' is defined but never used.","'Divider' is defined but never used.","'Form' is defined but never used.","'Progress' is defined but never used.","'Grid' is defined but never used.","'Card' is defined but never used.","'Image' is defined but never used.","'Header' is defined but never used.","'Button' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement"]